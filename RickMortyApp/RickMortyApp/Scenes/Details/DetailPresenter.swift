//
//  DetailPresenter.swift
//  RickMortyApp
//
//  Created by Nevilkumar Lad on 06/01/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailPresentationLogic {
    func presentDetailDetails(response: DetailModel.DetailDetails.Response)
    func presentNextScene(response: DetailModel.NextScene.Response)
    func presentLoader(type: DetailLoaderType)
    func hideLoader(type: DetailLoaderType)
    func presentError(type: DetailErrorType)
}

class DetailPresenter: DetailPresentationLogic {
    weak var viewController: DetailDisplayLogic?

    // MARK: Do DetailDetails

    func presentDetailDetails(response: DetailModel.DetailDetails.Response) {
        let viewModel = DetailModel.DetailDetails.ViewModel()
        viewController?.displayDetailDetails(viewModel: viewModel)
    }

    func presentNextScene(response: DetailModel.NextScene.Response) {
        let viewModel = DetailModel.NextScene.ViewModel()
        viewController?.displayNextScene(viewModel: viewModel)
    }

    func presentLoader(type: DetailLoaderType) {
        viewController?.displayLoader(type: type)
    }

    func hideLoader(type: DetailLoaderType) {
        viewController?.hideLoader(type: type)
    }

    func presentError(type: DetailErrorType) {
        viewController?.displayError(type: type)
    }
}
