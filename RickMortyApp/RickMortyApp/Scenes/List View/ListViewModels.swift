//
//  ListViewModels.swift
//  RickMortyApp
//
//  Created by Nevilkumar Lad on 06/01/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

let DATA_LIMIT_PER_PAGE = 100

enum ListType {
    case characters
    case episodes
    case locations
}

enum ListLoaderType {
    case general
}

enum ListErrorType {
    case backend
    case custom(message: String)
}

enum ListModels {

    // MARK: - Use Cases
    enum FetchFromLocalDataStore {
        struct Request {
        }

        struct Response {
        }

        struct ViewModel {
            var exampleTranslation: String?
        }
    }

    enum FetchFromRemoteDataStore {
        struct Request {
            let listType: ListType
        }

        struct Response {
            var episodes: [Episode]?
            var characters: [Character]?
            var locations: [LocationDetails]?
            var didAllowToFetchNextData: Bool = false
        }

        struct ViewModel {
            struct DisplayedListItem {
                var title: String
                var subTitle: String
                var info: String?
                var imageURL: String?
                /// Set to `true`  if detailed data is present for the current item and allow to show next screen
                var showDetail: Bool
                var isLoadingCell: Bool = false
            }

            var displayedListItem: [DisplayedListItem]
            var didAllowToFetchNextData: Bool
        }
    }
}
