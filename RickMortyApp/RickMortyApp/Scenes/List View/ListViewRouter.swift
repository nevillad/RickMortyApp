//
//  ListViewRouter.swift
//  RickMortyApp
//
//  Created by Nevilkumar Lad on 06/01/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit



protocol ListRoutingLogic {
    func routeToNext(showDetail: Bool, index: Int)
}

protocol ListDataPassing {
    var dataStore: ListDataStore? { get }
}

class ListRouter: NSObject, ListRoutingLogic, ListDataPassing {

    // MARK: - Properties
    weak var viewController: ListViewController?
    var dataStore: ListDataStore?

    // MARK: - Routing
    func routeToNext(showDetail: Bool, index: Int) {
        self.dataStore?.selectdIndex = index
        if showDetail {

        } else {
            self.showActionSheet()
        }
    }

    func showActionSheet() {
        // Create the UIAlertController object with UIAlertController.Style.actionSheet style, this style will create the alert dialog with action sheet.
        let alertActionSheetController = UIAlertController(title: "", message: "Please select", preferredStyle: UIAlertController.Style.actionSheet)

        // Create a cancel style alert action.
        let cancelAction: UIAlertAction = UIAlertAction(title: "Cancel", style: UIAlertAction.Style.cancel) { (cancelAction) in
            debugPrint("Cancel action button is clicked.")
        }

        let reminderAction:UIAlertAction = UIAlertAction(title: "Show Detail", style: UIAlertAction.Style.default) { (reminderAction) in
            debugPrint("Remind me later action button is clicked.")
            self.showDetailView()
        }

        let okAction:UIAlertAction = UIAlertAction(title: "Go to Next", style: UIAlertAction.Style.default) { (okAction) in
            debugPrint("Go to Next is clicked.")
        }

        // Add above actions to the alert controller.
        alertActionSheetController.addAction(cancelAction)
        alertActionSheetController.addAction(reminderAction)
        alertActionSheetController.addAction(okAction)

        // Present the alert action sheet. You can see it slide up from the screen bottom.
        viewController?.present(alertActionSheetController, animated: true, completion: nil)
    }

    func showDetailView() {
/*
        let detailViewController = DetailViewController.instantiateFromStoryboard()
        var destinationDS = detailViewController.router?.dataStore
        self.passDataTo(&destinationDS!, from: self.dataStore!)

        viewController?.navigationController?.pushViewController(detailViewController, animated: true)
 */
    }

    /*
    // MARK: - Passing Data
     func passDataTo(_ destinationDS: inout DetailDataStore, from sourceDS: ListDataStore) {

        let index = sourceDS.selectdIndex ?? 0

        switch sourceDS.listScreenType {
        case .characters:
            destinationDS.screenTitle = "Character"
            if let characters = sourceDS.characters, characters.count > index {
                let character = characters[index]
                destinationDS.title = character.name ?? ""
                destinationDS.description = character.name
                destinationDS.link = character.url
            }
        case .episodes:
            destinationDS.screenTitle = "Episode"
            if let quotes = sourceDS.quotes, quotes.count > index {
                let auote = quotes[index]
                destinationDS.description = auote.content
                destinationDS.name = auote.author ?? ""
            }
        default:
            return
        }
     }*/
}

/*
@objc protocol ListViewRoutingLogic {
    func showNextScene()
}

protocol ListViewDataPassing {
    var dataStore: ListViewDataStore? { get }
}

class ListViewRouter: NSObject, ListViewRoutingLogic, ListViewDataPassing {
    weak var viewController: ListViewViewController?
    var dataStore: ListViewDataStore?

    // MARK: Navigation
    func showNextScene() {

    }
}

// MARK: Passing data
extension ListViewRouter {

    /*
    func passDataTo(_ destinationDS: inout <destinationDataStore>?, from sourceDS: ListViewDataStore?) {

    }
    */
}
*/
